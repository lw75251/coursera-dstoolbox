if ( sum(clean) >= threshold ) {
print("hello")
}
else {
corr_vec[i] = 0;
}
}
return( corr_vec )
}
corr("specdata", 150)
setwd(C:\\Users\\Leon Wu\\Desktop\\Online Courses\\coursera-dstoolbox\\R Programming\\Quiz 2)
setwd("C:\\Users\\Leon Wu\\Desktop\\Online Courses\\coursera-dstoolbox\\R Programming\\Quiz 2")
# Function that calculates the correlation between sulfate and nitrate for monitor locations
# where the number of completely observed cases is greater than the threshold
#     Args: 'Directory' - char vec of length 1 indicating location of csv
#           'threshold' - numeric vector of length 1 indicating # of completely observed observations
corr <- function(directory, threshold) {
corr_vec = numeric(332);
# For loop to go through each ID and read each table
for (i in 1:1) {
file <- paste(directory,"/",sprintf("%03d", i), ".csv", sep = "")
unclean <- read.csv(file, header = TRUE)
clean <- unclean[complete.cases(unclean),]
if ( sum(clean) >= threshold ) {
print("hello")
}
else {
corr_vec[i] = 0;
}
}
return( corr_vec )
}
corr("specdata", 150)
# Function that calculates the correlation between sulfate and nitrate for monitor locations
# where the number of completely observed cases is greater than the threshold
#     Args: 'Directory' - char vec of length 1 indicating location of csv
#           'threshold' - numeric vector of length 1 indicating # of completely observed observations
corr <- function(directory, threshold) {
corr_vec = numeric(332);
# For loop to go through each ID and read each table
for (i in 1:1) {
file <- paste(directory,"/",sprintf("%03d", i), ".csv", sep = "")
unclean <- read.csv(file, header = TRUE)
clean <- unclean[complete.cases(unclean),]
print(clean)
}
return( corr_vec )
}
corr("specdata", 150)
# Function that calculates the correlation between sulfate and nitrate for monitor locations
# where the number of completely observed cases is greater than the threshold
#     Args: 'Directory' - char vec of length 1 indicating location of csv
#           'threshold' - numeric vector of length 1 indicating # of completely observed observations
corr <- function(directory, threshold) {
corr_vec = numeric(332);
# For loop to go through each ID and read each table
for (i in 1:1) {
file <- paste(directory,"/",sprintf("%03d", i), ".csv", sep = "")
unclean <- read.csv(file, header = TRUE)
clean <- unclean[complete.cases(unclean),]
s_vec <- clean["sulfate"]
print(clean)
}
return( corr_vec )
}
corr("specdata", 150)
# Function that calculates the correlation between sulfate and nitrate for monitor locations
# where the number of completely observed cases is greater than the threshold
#     Args: 'Directory' - char vec of length 1 indicating location of csv
#           'threshold' - numeric vector of length 1 indicating # of completely observed observations
corr <- function(directory, threshold) {
corr_vec = numeric(332);
# For loop to go through each ID and read each table
for (i in 1:1) {
file <- paste(directory,"/",sprintf("%03d", i), ".csv", sep = "")
unclean <- read.csv(file, header = TRUE)
clean <- unclean[complete.cases(unclean),]
s_vec <- clean["sulfate"]
n_vec <- clean["nitrate"]
print(clean)
}
return( corr_vec )
}
corr("specdata", 150)
# Function that calculates the correlation between sulfate and nitrate for monitor locations
# where the number of completely observed cases is greater than the threshold
#     Args: 'Directory' - char vec of length 1 indicating location of csv
#           'threshold' - numeric vector of length 1 indicating # of completely observed observations
corr <- function(directory, threshold) {
corr_vec = numeric(332);
# For loop to go through each ID and read each table
for (i in 1:1) {
file <- paste(directory,"/",sprintf("%03d", i), ".csv", sep = "")
unclean <- read.csv(file, header = TRUE)
clean <- unclean[complete.cases(unclean),]
s_vec <- clean["sulfate"]
n_vec <- clean["nitrate"]
print(s_vec)
}
return( corr_vec )
}
corr("specdata", 150)
# Function that calculates the correlation between sulfate and nitrate for monitor locations
# where the number of completely observed cases is greater than the threshold
#     Args: 'Directory' - char vec of length 1 indicating location of csv
#           'threshold' - numeric vector of length 1 indicating # of completely observed observations
corr <- function(directory, threshold) {
corr_vec = numeric(332);
# For loop to go through each ID and read each table
for (i in 1:1) {
file <- paste(directory,"/",sprintf("%03d", i), ".csv", sep = "")
unclean <- read.csv(file, header = TRUE)
clean <- unclean[complete.cases(unclean),]
print(length(clean))
s_vec <- clean["sulfate"]
n_vec <- clean["nitrate"]
}
return( corr_vec )
}
corr("specdata", 150)
# Function that calculates the correlation between sulfate and nitrate for monitor locations
# where the number of completely observed cases is greater than the threshold
#     Args: 'Directory' - char vec of length 1 indicating location of csv
#           'threshold' - numeric vector of length 1 indicating # of completely observed observations
corr <- function(directory, threshold) {
corr_vec = numeric(332);
# For loop to go through each ID and read each table
for (i in 1:1) {
file <- paste(directory,"/",sprintf("%03d", i), ".csv", sep = "")
unclean <- read.csv(file, header = TRUE)
clean <- unclean[complete.cases(unclean),]
print(sum(clean))
s_vec <- clean["sulfate"]
n_vec <- clean["nitrate"]
}
return( corr_vec )
}
corr("specdata", 150)
# Function that calculates the correlation between sulfate and nitrate for monitor locations
# where the number of completely observed cases is greater than the threshold
#     Args: 'Directory' - char vec of length 1 indicating location of csv
#           'threshold' - numeric vector of length 1 indicating # of completely observed observations
corr <- function(directory, threshold) {
corr_vec = numeric(332);
# For loop to go through each ID and read each table
for (i in 1:1) {
file <- paste(directory,"/",sprintf("%03d", i), ".csv", sep = "")
unclean <- read.csv(file, header = TRUE)
clean <- unclean[complete.cases(unclean),]
print(length(clean))
s_vec <- clean["sulfate"]
n_vec <- clean["nitrate"]
}
return( corr_vec )
}
corr("specdata", 150)
# Function that calculates the correlation between sulfate and nitrate for monitor locations
# where the number of completely observed cases is greater than the threshold
#     Args: 'Directory' - char vec of length 1 indicating location of csv
#           'threshold' - numeric vector of length 1 indicating # of completely observed observations
corr <- function(directory, threshold) {
corr_vec = numeric(332);
# For loop to go through each ID and read each table
for (i in 1:1) {
file <- paste(directory,"/",sprintf("%03d", i), ".csv", sep = "")
unclean <- read.csv(file, header = TRUE)
crows <- complete.cases(unclean)
num_complete <- sum(crows)
clean <- unclean[crows,]
if( crows >= threshold ) {
corr_vec[i] = cor(clean["sulfate"], clean["nitrate"])
}
else {
corr_vec[i] = 0;
}
}
return( corr_vec )
}
corr("specdata", 150)
# Function that calculates the correlation between sulfate and nitrate for monitor locations
# where the number of completely observed cases is greater than the threshold
#     Args: 'Directory' - char vec of length 1 indicating location of csv
#           'threshold' - numeric vector of length 1 indicating # of completely observed observations
corr <- function(directory, threshold) {
corr_vec = numeric(332);
# For loop to go through each ID and read each table
for (i in 1:1) {
file <- paste(directory,"/",sprintf("%03d", i), ".csv", sep = "")
unclean <- read.csv(file, header = TRUE)
crows <- complete.cases(unclean)
num_complete <- sum(crows)
clean <- unclean[crows,]
if( num_complete >= threshold ) {
corr_vec[i] = cor(clean["sulfate"], clean["nitrate"])
}
else {
corr_vec[i] = 0;
}
}
return( corr_vec )
}
corr("specdata", 150)
# Function that calculates the correlation between sulfate and nitrate for monitor locations
# where the number of completely observed cases is greater than the threshold
#     Args: 'Directory' - char vec of length 1 indicating location of csv
#           'threshold' - numeric vector of length 1 indicating # of completely observed observations
corr <- function(directory, threshold) {
corr_vec = numeric(332);
# For loop to go through each ID and read each table
for (i in 1:332) {
file <- paste(directory,"/",sprintf("%03d", i), ".csv", sep = "")
unclean <- read.csv(file, header = TRUE)
crows <- complete.cases(unclean)
num_complete <- sum(crows)
clean <- unclean[crows,]
if( num_complete >= threshold ) {
corr_vec[i] = cor(clean["sulfate"], clean["nitrate"])
}
else {
corr_vec[i] = 0;
}
}
return( corr_vec )
}
corr("specdata", 150)
# Function that calculates the correlation between sulfate and nitrate for monitor locations
# where the number of completely observed cases is greater than the threshold
#     Args: 'Directory' - char vec of length 1 indicating location of csv
#           'threshold' - numeric vector of length 1 indicating # of completely observed observations
corr <- function(directory, threshold) {
corr_vec = numeric(332);
# For loop to go through each ID and read each table
for (i in 1:332) {
file <- paste(directory,"/",sprintf("%03d", i), ".csv", sep = "")
unclean <- read.csv(file, header = TRUE)
crows <- complete.cases(unclean)
num_complete <- sum(crows)
clean <- unclean[crows,]
if( num_complete >= threshold ) {
corr_vec[i] = cor(clean["sulfate"], clean["nitrate"])
}
else {
corr_vec[i] = 0;
}
}
return( corr_vec )
}
cr <- corr("specdata", 150)
head(cr)
# Function that calculates the correlation between sulfate and nitrate for monitor locations
# where the number of completely observed cases is greater than the threshold
#     Args: 'Directory' - char vec of length 1 indicating location of csv
#           'threshold' - numeric vector of length 1 indicating # of completely observed observations
corr <- function(directory, threshold) {
corr_vec = numeric(332);
# For loop to go through each ID and read each table
for (i in 1:332) {
file <- paste(directory,"/",sprintf("%03d", i), ".csv", sep = "")
unclean <- read.csv(file, header = TRUE)
crows <- complete.cases(unclean)
num_complete <- sum(crows)
clean <- unclean[crows,]
if( num_complete >= threshold ) {
corr_vec[i] = cor(clean["sulfate"], clean["nitrate"])
}
else {
corr_vec[i] = 0;
}
}
print(length(corr_vec))
return( corr_vec )
}
cr <- corr("specdata", 150)
head(cr)
# Function that calculates the correlation between sulfate and nitrate for monitor locations
# where the number of completely observed cases is greater than the threshold
#     Args: 'Directory' - char vec of length 1 indicating location of csv
#           'threshold' - numeric vector of length 1 indicating # of completely observed observations
corr <- function(directory, threshold) {
corr_vec = numeric(331);
# For loop to go through each ID and read each table
for (i in 1:332) {
file <- paste(directory,"/",sprintf("%03d", i), ".csv", sep = "")
unclean <- read.csv(file, header = TRUE)
crows <- complete.cases(unclean)
num_complete <- sum(crows)
clean <- unclean[crows,]
if( num_complete >= threshold ) {
corr_vec[i] = cor(clean["sulfate"], clean["nitrate"])
}
else {
corr_vec[i] = 0;
}
}
print(length(corr_vec))
return( corr_vec )
}
cr <- corr("specdata", 150)
head(cr)
cr <- corr("specdata", 400)
head(cr)
# Function that calculates the correlation between sulfate and nitrate for monitor locations
# where the number of completely observed cases is greater than the threshold
#     Args: 'Directory' - char vec of length 1 indicating location of csv
#           'threshold' - numeric vector of length 1 indicating # of completely observed observations
corr <- function(directory, threshold) {
corr_vec = numeric(332);
# For loop to go through each ID and read each table
for (i in 1:332) {
file <- paste(directory,"/",sprintf("%03d", i), ".csv", sep = "")
unclean <- read.csv(file, header = TRUE)
crows <- complete.cases(unclean)
num_complete <- sum(crows)
clean <- unclean[crows,]
if( num_complete >= threshold ) {
corr_vec[i] = cor(clean["sulfate"], clean["nitrate"])
}
else {
corr_vec[i] = 0;
}
}
print(length(corr_vec))
return( corr_vec )
}
cr <- corr("specdata", 400)
head(cr)
# Function that calculates the correlation between sulfate and nitrate for monitor locations
# where the number of completely observed cases is greater than the threshold
#     Args: 'Directory' - char vec of length 1 indicating location of csv
#           'threshold' - numeric vector of length 1 indicating # of completely observed observations
corr <- function(directory, threshold) {
corr_vec = numeric(332);
# For loop to go through each ID and read each table
for (i in 1:332) {
file <- paste(directory,"/",sprintf("%03d", i), ".csv", sep = "")
unclean <- read.csv(file, header = TRUE)
crows <- complete.cases(unclean)
num_complete <- sum(crows)
clean <- unclean[crows,]
if( num_complete > threshold ) {
corr_vec[i] = cor(clean["sulfate"], clean["nitrate"])
}
else {
corr_vec[i] = 0;
}
}
print(length(corr_vec))
return( corr_vec )
}
cr <- corr("specdata", 400)
head(cr)
# Function that calculates the correlation between sulfate and nitrate for monitor locations
# where the number of completely observed cases is greater than the threshold
#     Args: 'Directory' - char vec of length 1 indicating location of csv
#           'threshold' - numeric vector of length 1 indicating # of completely observed observations
corr <- function(directory, threshold) {
corr_vec = numeric(332);
# For loop to go through each ID and read each table
for (i in 1:332) {
file <- paste(directory,"/",sprintf("%03d", i), ".csv", sep = "")
unclean <- read.csv(file, header = TRUE)
crows <- complete.cases(unclean)
num_complete <- sum(crows)
clean <- unclean[crows,]
if( num_complete > threshold ) {
corr_vec[i] = cor(clean["sulfate"], clean["nitrate"])
}
else {
corr_vec[i] = 0;
}
}
print(length(corr_vec))
return( corr_vec[x!=0] )
}
cr <- corr("specdata", 400)
head(cr)
# Function that calculates the correlation between sulfate and nitrate for monitor locations
# where the number of completely observed cases is greater than the threshold
#     Args: 'Directory' - char vec of length 1 indicating location of csv
#           'threshold' - numeric vector of length 1 indicating # of completely observed observations
corr <- function(directory, threshold) {
corr_vec = numeric(332);
# For loop to go through each ID and read each table
for (i in 1:332) {
file <- paste(directory,"/",sprintf("%03d", i), ".csv", sep = "")
unclean <- read.csv(file, header = TRUE)
crows <- complete.cases(unclean)
num_complete <- sum(crows)
clean <- unclean[crows,]
if( num_complete > threshold ) {
corr_vec[i] = cor(clean["sulfate"], clean["nitrate"])
}
else {
corr_vec[i] = 0;
}
}
print(length(corr_vec))
return( corr_vec[corr_vec!=0] )
}
cr <- corr("specdata", 400)
head(cr)
summary(cr)
pollutantmean("specdata", "sulfate", 1:10)
# Function that calculates mean of a pollutant across a specified list of monitors
#     Args: 'Directory' - char vec of length 1 indicating location of csv
#           'pollutant' - name of pollutant to calculate mean (either sulfate or nitrate)
#           'id'        - Integer Vector indicating monitor ID numbers to be used
pollutantmean <- function(directory, pollutant, id = 1:332) {
# For loop to go through each ID and read each table
sum <- 0;
length <- 0;
for (i in id) {
file <- paste(directory,"/",sprintf("%03d", i), ".csv", sep = "")
unclean <- read.csv(file, header = TRUE)[pollutant]
clean <- unclean[!is.na(unclean)]
sum = sum + sum(clean)
length = length + length(clean)
}
return(sum/length)
}
# Function that reports number of completely observed cases in each data file
#     Args: 'Directory' - char vec of length 1 indicating location of csv
#           'id'        - Integer Vector indicating monitor ID numbers to be used
complete <- function(directory, id = 1:332) {
df <- data.frame(id=integer(), nobs=integer())
# For loop to go through each ID and read each table
for (i in id) {
file <- paste(directory,"/",sprintf("%03d", i), ".csv", sep = "")
unclean <- read.csv(file, header = TRUE)
clean <- complete.cases(unclean)
length <- sum(clean)
df[nrow(df)+1,] = list(i,length)
}
return(df)
}
# Function that calculates the correlation between sulfate and nitrate for monitor locations
# where the number of completely observed cases is greater than the threshold
#     Args: 'Directory' - char vec of length 1 indicating location of csv
#           'threshold' - numeric vector of length 1 indicating # of completely observed observations
corr <- function(directory, threshold) {
corr_vec = numeric(332);
# For loop to go through each ID and read each table
for (i in 1:332) {
file <- paste(directory,"/",sprintf("%03d", i), ".csv", sep = "")
unclean <- read.csv(file, header = TRUE)
crows <- complete.cases(unclean)
num_complete <- sum(crows)
clean <- unclean[crows,]
if( num_complete > threshold ) {
corr_vec[i] = cor(clean["sulfate"], clean["nitrate"])
}
else {
corr_vec[i] = 0;
}
}
return( corr_vec[corr_vec!=0] )
}
pollutantmean("specdata", "sulfate", 1:10)
pollutantmean("specdata", "nitrate", 70:72)
pollutantmean("specdata", "sulfate", 34)
pollutantmean("specdata", "nitrate")
cc <- complete("specdata", c(6, 10, 20, 34, 100, 200, 310))
print(cc$nobs)
cc <- complete("specdata", 54)
print(cc$nobs)
set.seed(42)
cc <- complete("specdata", 332:1)
use <- sample(332, 10)
print(cc[use, "nobs"])
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
# Function that calculates the correlation between sulfate and nitrate for monitor locations
# where the number of completely observed cases is greater than the threshold
#     Args: 'Directory' - char vec of length 1 indicating location of csv
#           'threshold' - numeric vector of length 1 indicating # of completely observed observations
corr <- function(directory, threshold = 0) {
corr_vec = numeric(332);
# For loop to go through each ID and read each table
for (i in 1:332) {
file <- paste(directory,"/",sprintf("%03d", i), ".csv", sep = "")
unclean <- read.csv(file, header = TRUE)
crows <- complete.cases(unclean)
num_complete <- sum(crows)
clean <- unclean[crows,]
if( num_complete > threshold ) {
corr_vec[i] = cor(clean["sulfate"], clean["nitrate"])
}
else {
corr_vec[i] = 0;
}
}
return( corr_vec[corr_vec!=0] )
}
cr <- corr("specdata")
cr <- sort(cr)
set.seed(868)
out <- round(cr[sample(length(cr), 5)], 4)
print(out)
cr <- corr("specdata", 129)
cr <- sort(cr)
n <- length(cr)
set.seed(197)
out <- c(n, round(cr[sample(n, 5)], 4))
print(out)
cr <- corr("specdata", 2000)
n <- length(cr)
cr <- corr("specdata", 1000)
cr <- sort(cr)
print(c(n, round(cr, 4)))
